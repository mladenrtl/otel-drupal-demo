stream_over_http_enabled: true
server:
  http_listen_port: 3200
  log_level: info

query_frontend:
  search:
    duration_slo: 5s
    throughput_bytes_slo: 1.073741824e+09
  trace_by_id:
    duration_slo: 5s
  metrics:
    max_duration: 168h

distributor:
  log_received_spans:
    enabled: true
    include_all_attributes: true
    filter_by_status_error: false
  receivers:
    otlp:
      protocols:
        http:
          cors:
            allowed_origins: ["*"]
            allowed_headers: ["*"]
        grpc:

ingester:
  max_block_duration: 5m               # cut the headblock when this much time passes. this is being set for demo purposes and should probably be left alone normally

compactor:
  compaction:
    block_retention: 1h                # overall Tempo trace retention. set for demo purposes

metrics_generator:
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  processor:
    span_metrics:
      dimensions:
        - http.response.status_code
        - http.request.method
        - server.address
        - db.name
        - db.system
        - db.operation
  storage:
    path: /tmp/tempo/generator/wal
    remote_write:
      - url: http://prometheus:9090/api/v1/write
        send_exemplars: true
  # -- Used by the local blocks processor to store a wal for traces.
  traces_storage:
    path: /var/tempo/generator/traces
  metrics_ingestion_time_range_slack: 30s

storage:
  trace:
    backend: local                     # backend configuration to use
    wal:
      path: /tmp/tempo/wal             # where to store the the wal locally
    local:
      path: /tmp/tempo/blocks

overrides:
  defaults:
    metrics_generator:
      processors: [service-graphs, span-metrics, local-blocks] # enables metrics generator
