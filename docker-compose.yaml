version: "3.4"

services:

  tempo:
    image: grafana/tempo:2.5.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker-compose/tempo/config.yaml:/etc/tempo.yaml
      - ./docker-compose/tempo/tempo-data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:v2.52.0
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./docker-compose/prometheus/config.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - ./docker-compose/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./docker-compose/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker-compose/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
    ports:
      - "3000:3000"
    depends_on:
      - loki

  loki:
    image: grafana/loki:3.0.0
    ports:
      - "3100:3100"
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    volumes:
      - ./docker-compose/loki/config.yaml:/etc/loki/local-config.yaml
      - ./docker-compose/loki/data:/tmp/loki

  promtail:
    image: grafana/promtail:3.0.0
    command: [ "-config.file=/etc/promtail/promtail-config.yaml" ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker-compose/promtail/config.yaml:/etc/promtail/promtail-config.yaml
    depends_on:
      - loki

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    depends_on:
      - loki

  users.api:
    image: users.api
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: apis/Users.API/Dockerfile
    depends_on:
      - mongodb
      - tempo

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://tempo:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    depends_on:
      - tempo
volumes:
  mongo-data:
